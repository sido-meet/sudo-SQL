from typing import Tuple
from sudo_sql.environments.base import BaseEnvironment

class SFTEnvironment(BaseEnvironment):
    """
    An environment for Supervised Fine-Tuning (SFT).

    This environment provides a reward of 1.0 if the generated SQL exactly matches
    the ground truth SQL from the dataset, and 0.0 otherwise.
    """
    def __init__(self, dataset: list[dict]):
        """
        Initializes the SFT environment.

        Args:
            dataset: A list of dictionaries, where each dictionary contains a
                     'question' and a 'sql' key.
        """
        self.dataset = dataset
        self.current_item = 0

    def step(self, generated_sql: str) -> Tuple[str, float]:
        """
        Compares the generated SQL with the ground truth and returns a reward.

        Args:
            generated_sql: The SQL query generated by the model.

        Returns:
            A tuple containing the observation (ground truth SQL) and the reward.
        """
        ground_truth_sql = self.dataset[self.current_item]['sql']

        if generated_sql.strip().lower() == ground_truth_sql.strip().lower():
            reward = 1.0
        else:
            reward = 0.0

        observation = ground_truth_sql
        
        # Move to the next item in the dataset for the next step
        self.current_item = (self.current_item + 1) % len(self.dataset)

        return observation, reward
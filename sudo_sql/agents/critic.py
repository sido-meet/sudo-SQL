# sudo_sql/agents/critic.py

from sudo_sql.models.base import BaseModelProvider

class CriticAgent:
    """
    An agent that reviews and potentially corrects a generated SQL query.
    """
    def __init__(self, provider: BaseModelProvider):
        """
        Initializes the Critic Agent with a model provider.

        Args:
            provider: The model provider to use for the review process.
        """
        self.provider = provider

    def review_and_correct(self, question: str, schema: str, original_sql: str) -> str:
        """
        Reviews an SQL query and attempts to correct it if necessary.

        Args:
            question: The original natural language question.
            schema: The database schema.
            original_sql: The initial SQL query generated by another model.

        Returns:
            The reviewed (and potentially corrected) SQL query.
        """
        prompt = f"""You are an expert SQL critic. Your task is to review the following SQL query and correct it if it's wrong.
The query was generated for the question: \"{question}\"
Based on the database schema:
{schema}

Original SQL query:
```sql
{original_sql}
```

Please review the query. If it is correct, return it as is. If it is incorrect, provide the corrected version.
Do not add any explanation, just the SQL query.
"""
        
        corrected_sql = self.provider.generate(prompt)
        
        # Basic post-processing to clean up the output
        if "```sql" in corrected_sql:
            corrected_sql = corrected_sql.split("```sql")[1].split("```")[0].strip()
            
        return corrected_sql

